﻿	Jan. 21, 2016
- Product is largely nailed down, it will track students’ course grades
- Mostly for university students, undergraduate students in particular
- Lots of things in university that need to be tracked
- Do tasks need to be able to be broken down into subtasks? It is a good option
- Should be password protected
- Would like to see it completed in the next few months
- User stories:
	- Calculating grades/GPA
	- Viewing schedule
	- Viewing previous grades
	- Adding tasks/assignments
	- Study tool

Iteration 1
-------------

Main Screen (4 days)
- David worked on the GUI for main screen (1 day)
- David, Anthony and Yusef created main screen code (2 days)
- Group combined and fixed code for main screen(1 day)

Add Course (4 days)
- David, Anthony and Yusef created code for Add Course (3 days)
- Group combined and fixed code (1 day)

Course List (4 days)
- David, Anthony and Yusef created code for Course List (3 days)
- Group combined and fixed code (1 day)

Database (5 days)
- Ian created database (5 days)

	February 5, 2016
- Everyone is here but Graham
- Someone is going to take the lead for each of the iterations
- Group github account
- One user story for the first iteration needs to be implemented and tested
	- Course list, information
	- User accounts
	- Schedule
- Database stub to be stored on memory as a Class         

	February 8, 2016
- Graham is sick
- Breaking up tasks:
	- Ian & Graham -Stub Database
	- David & Yusuf & Anthony - GUI
- We’ll decide on another meeting over WhatsApp

	Ferbruary 21, 2016
- Combined David and Ian's code and cleaned up (Graham)

	February 22, 2016
- Code for database and GUI have been combined
- Wiki page has been created
- Student class is being created

February 26, 2016
- Iteration 2 needs the SQL database, and more user stories to be added
- we should also finish the adding course information feature
- for next iteration (guessing on description) from detailed stories:
	- tasks - 4 days - High Priority - Anthony
	- create profiles - 5 days - High Priority - David
	- grade calculation - 2 days - Low Priority
	- course information - 3 days - Medium Priority - Yusuf
	- SQL database - two weeks - High Priority - Ian & Graham
	- implement proper gui for course list - 2 days - High Priority
- need to have the stub implemented better for testing

March 8, 2016
- Made a rough class for TaskList and AddTask (Anthony)
- Made rough layout for the TaskList and AddTask screens (Anthony)

March 11, 2016
- Ian can’t be the only one making commits
- David pushed some of his work to develop
- Graham and Ian will be doing a dependency injection for the stub
	- Should be able to make what is now called staticDB into a subclass of SQLDatabase and just overwrite the methods in SQLDatabase
	- An instance will be created at the start rather than a static class
		- Tables will also be initialized at the start
- We went through the things we lost marks on last time around
	- Break down user stories into developer tasks
	- Log the amount of time spent on each task
	- Again, Ian can’t be the only one committing more than once
	- More thorough testing (edge cases)
	- Need to write integration tests
		- Can probably start even before everything else is finished
	- The marker did not appreciate the diagram, it needs to have three layers
		- We should look at an online example
		- Course notes for UML diagram
- Ian wrote a word document containing our plan for the iteration, be sure to go through and add developer tasks and anything else it needs
- Double check the assignment on d2l
- Another thing we should do is separate the file themselves from each other
	- As we add more files the directory is just going to get more and more cluttered
	- (Pretty sure we lost marks on this)


March 11, 2016
- Created Student class and added code to SQL to handle students. (Graham) 
- Added a StubDatabase subclass of SQLDatabase (dependency injection) and ran unit tests on it (Ian)

March 13, 2016
- Apparently my code didn't get pushed so Student class was replaced with User class by David. (Graham)
- Everything is coming together, SQL database seems to be working as intended.
- Added Task class and made a few naming changes for buttons. (Graham)
- Repackaged classes into appropriate levels. (Graham)
- Wrote unit tests for business classes (Ian)
- Removed bug from SQLDatabase's getUser() method, rewrote query to use rawQuery() method (Ian)
- There seems to be some issues with the Controllers, still uncertain if the database can be accessed everywhere
- Pushed Add Task and Task List layout and classes to Develop (Anthony)

March 14, 2016
- We all got together after class to put our code together and do some final testing. During this time we found that the SQLDatabase
began acting up and it doesn't recognize that we have a UserPassword column in our SQL table. After some research we concluded that the version of the database needed to be increased. We spent some time trying to figure this out, but ran out of time so we changed our code to use the StubDatabase.
- All the classes and activities where broken down into three layers representing business, data access and presentation layers 
- When we changed back to our StubDatabase we found that our Courses and Tasks were being added to the SubTable but the program was instantly calling a constructor and removing the added items so there is nothing to display in ListOfCourses and TaskList. We hard coded in a Course and Task to show that our code does in fact display these items.


March 14, 2016
-All the classes and activities where broken down into three layers representing business, data access and presentation layers 
- Managed to get the database working in the evening (Ian)

March 21, 2016
- Working on adding some new activities for refactoring (Ian)
	- task list will show only the task name
	- click on that task to see more detail and edit the record of it
	- then save changes to the database
	- tasks need to be editable s.t. they can have a score
	- same for courses
- Added grade calculator functionality for individual courses (Ian)
	- modified database to find tasks by associated course
	- added task detail page to edit course details including score
	- task detail page calculates the grade as a fraction of the weight

March 23, 2016
- Yusuf is sick
- Agenda:
	- Seminar
	- Iteration 3
- Might volunteer to do a seminar on Wednesday 
- User stories:
	- Graham will do reminders, will concentrate on login functionality though
	- Anthony will do calendar
	- Ian will do grade calculator
- We’ll all chip in on refactoring
- David will do acceptance testing with our customer
- Won’t have a video for Monday because of our customer’s holiday plans
- Anthony will put together a powerpoint for the seminar

March 25, 2016
- Working on refactoring the Stub and Database (Ian)
- used the staticDB class to provide a better means of doing a dependency injection, it is now one line, and one line only to change between the stub and the SQLDatabase (Ian)
- added a user description to the course list page, and a course description to the task list page (Ian)

March 26, 2016
- Added a Grader class to return Strings containing the grade for each course and the remaining weight, so that the user doesn't exceed 1 (Ian)
- Modified the Task table to include a foreign UserID for each task (Ian)

March 28, 2016
- Created the ArrayConverter class to handle converting ArrayLists of ListItems to arrays of strings to be displayed in an Activity (Ian)
	- Strategy Pattern
- Noticed that the Add New Task button is not visible on the TaskList page and hopefully fixed the problem (Ian)
- Added additional scaffolding so Candidate Keys in the Database are never left empty (Ian)
- 

March 29, 2016
- Spent some time working on input sanitization, parsing Doubles is done inside a try-catch block and there is now a good deal of scaffoling surrounding the Task forms to ensure grades are handled properly (Ian)

April 1, 2016
- I'm going to start working on GPA Calculation, it'll involve adding a credit hours item to the Courses table, and the functionality to take that and the final grade in the course (when remaining weight = 0) and spit out a letter grade (Ian)

April 8, 2016
- Finished writing the GPA Calculation functions, and some associated tests (Ian)
- Now once there is no more room for assignments the Add Grade button appears, allowing the student to add their final letter grade. This grade, for each finished course, is used to calculate the student's GPA (Ian)
- Noticed and fixed a problem where Students retake the same course (Ian)
- Wrote and ran a Robotium TEst using the Android Studio plugin (Ian)
